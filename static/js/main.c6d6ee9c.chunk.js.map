{"version":3,"sources":["reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/store.js","components/Header/header.jsx","components/Menu/menu.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/profile.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","profileReducer","state","action","type","newPost","id","message","newPostText","likes","postsData","push","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsReducer","newMessageBody","body","messagesData","sidebarReducer","store","_state","profilePage","dialogsPage","dialogsData","name","sidebar","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","window","Header","className","src","alt","Menu","to","Post","props","Posts","postElements","map","post","newPostElement","React","createRef","ref","value","onChange","text","updateNewPostTextActionCreator","current","onClick","ProfileInfo","Profile","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","e","target","updateNewMessageBodyCreator","placeholder","App","exact","path","rerenderEntireTree","ReactDOM","render","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.c6d6ee9c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\n\r\nconst profileReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            state.postsData.push(newPost);\r\n            state.newPostText = \"\";\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nconst dialogsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body;\r\n            return state;\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            state.newMessageBody = '';\r\n            state.messagesData.push({id: 6, message: body});\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","const sidebarReducer = (state, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            postsData: [\r\n                {\r\n                    id: 1,\r\n                    message: \"Hi, who are u?\",\r\n                    likes: 12\r\n                },\r\n                {\r\n                    id: 2,\r\n                    message: \"Hi, who are u Doe?\",\r\n                    likes: 1\r\n                },\r\n                {\r\n                    id: 3,\r\n                    message: \"Hi, who are John?\",\r\n                    likes: 129\r\n                }\r\n            ],\r\n            newPostText: 'it-roman',\r\n        },\r\n        dialogsPage: {\r\n            dialogsData: [\r\n                {\r\n                    id: 1,\r\n                    name: \"Roman\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Dimych\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Petro\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: \"Andrey\"\r\n                }\r\n            ],\r\n            messagesData: [\r\n                {\r\n                    id: 1,\r\n                    message: \"Hi world!\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    message: \"Hi wrld!\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    message: \"Yo\"\r\n                }\r\n            ],\r\n            newMessageBody: \"\",\r\n\r\n        },\r\n        sidebar: {},\r\n    },\r\n    _callSubscriber() {\r\n        console.log(\"State change\");\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;  // observer наблюдатель addEventListener // publisher-subscriber\r\n    },\r\n\r\n    dispatch(action) {  // { type: 'ADD-POST' }\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n\r\n        this._callSubscriber(this._state);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\"\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"Logo header\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const addPosts = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        let action =  updateNewPostTextActionCreator(text);\r\n        props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} value={props.newPostText} onChange={ onPostChange }/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={ addPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport Posts from \"./Sections/Posts/posts.jsx\";\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo />\r\n            <Posts\r\n                postsData={props.profilePage.postsData}\r\n                newPostText={props.profilePage.newPostText}\r\n                dispatch={props.dispatch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.store.dispatch(sendMessageCreator());\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.store.dispatch(updateNewMessageBodyCreator(body));\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/header.jsx\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport Profile from \"./components/Profile/profile.jsx\";\nimport Dialogs from \"./components/Dialogs/dialogs.jsx\";\n\nfunction App(props) {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <Header/>\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route exact path=\"/profile\">\n                            <Profile\n                                profilePage={props.state.profilePage}\n                                dispatch={props.dispatch} />\n                        </Route>\n                        <Route exact path=\"/dialogs\">\n                            <Dialogs store={props.store} />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state}\n                 dispatch={store.dispatch.bind(store)}\n                 store={store} />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}