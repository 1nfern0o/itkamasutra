{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["Message","message","src","photo","alt","style","width","userName","Messages","messages","useSelector","state","chat","height","overflowY","map","m","index","AddMessageForm","useState","setMessage","dispatch","useDispatch","onChange","e","currentTarget","value","disabled","onClick","sendMessage","Chat","useEffect","startMessagesListening","stopMessagesListening","ChatPage"],"mappings":"wKAOMA,EAA4C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEjD,OACI,gCACI,qBAAKC,IAAKD,EAAQE,MAAOC,IAAI,SAASC,MAAO,CAAEC,MAAO,UACtD,4BAAIL,EAAQM,WACZ,uBACA,4BACKN,EAAQA,UAEb,2BAKNO,EAAe,WACjB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,YAEjE,OACI,qBAAKJ,MAAO,CAAEQ,OAAQ,QAASC,UAAW,QAA1C,SACKL,EAASM,KAAI,SAACC,EAAGC,GAAJ,OAAc,cAACjB,EAAD,CAAqBC,QAASe,GAAhBC,SAKhDC,EAAqB,WACvB,MAA8BC,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACMC,EAAWC,cAajB,OACI,gCACI,8BACI,0BAAUC,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,cAAcC,QAAQA,MAAOzB,MAEzE,8BACI,cAAC,IAAD,CAAQ0B,UAAU,EAAOC,QAhBV,WACnB3B,IAIJoB,EAASQ,YAAY5B,IACrBmB,EAAW,MAUH,wBAMVU,EAAW,WACb,IAAMT,EAAWC,cASjB,OAPAS,qBAAU,WAEN,OADAV,EAASW,eACF,WACHX,EAASY,kBAEd,IAGC,gCACI,cAACzB,EAAD,IACA,cAACU,EAAD,QAaGgB,UARM,WACjB,OACI,8BACI,cAACJ,EAAD","file":"static/js/5.32d2f958.chunk.js","sourcesContent":["import { Button } from \"antd\";\r\nimport React, {FC, useEffect, useState } from \"react\";\r\nimport { ChatMessageType } from \"../../api/chat-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendMessage, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nconst Message: FC<{ message: ChatMessageType }> = ({ message }) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} alt=\"avatar\" style={{ width: '30px' }} />\r\n            <b>{message.userName}</b>\r\n            <br/>\r\n            <p>\r\n                {message.message}\r\n            </p>\r\n            <hr/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Messages: FC = () => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages);\r\n\r\n    return (\r\n        <div style={{ height: '400px', overflowY: 'auto' }}>\r\n            {messages.map((m, index) => <Message key={index} message={m} />)}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm: FC = () => {\r\n    const [message, setMessage] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if(!message) {\r\n            return;\r\n        }\r\n\r\n        dispatch(sendMessage(message));\r\n        setMessage('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message} />\r\n            </div>\r\n            <div>\r\n                <Button disabled={false} onClick={sendMessageHandler}>Send</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Chat: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening());\r\n        return () => {\r\n            dispatch(stopMessagesListening());\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ChatPage: FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChatPage;"],"sourceRoot":""}