{"version":3,"sources":["reportWebVitals.js","components/Menu/menu.jsx","api/api.js","redux/users-reducer.js","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/usersContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/common/FormsControls/FormsControls.js","utils/Validators/validators.js","components/Dialogs/Sections/AddPostForm/AddDialogForm.jsx","components/Dialogs/dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","redux/auth-reducer.js","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Menu","className","to","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","post","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","type","toggleIsFetching","toggleFollowingProgress","usersReducer","state","action","map","user","id","followed","count","filter","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","disabled","some","unfollow","follow","fullName","Preloader","preloader","getUsers","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Component","compose","connect","dispatch","resultCode","followSuccess","unfollowSuccess","page","setUsers","items","totalCount","SEND_MESSAGE","dialogsData","name","messagesData","message","dialogsReducer","body","newMessageBody","DialogItem","MessageItem","FormControl","input","meta","hasError","touched","error","children","Textarea","restProps","child","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddDialogFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogsElements","dialog","messageElements","isAuth","values","sendMessage","newPostText","mapStateToPropsForRedirect","auth","withAuthRedirect","Components","RedirectComponent","sendMessageCreator","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","profile","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likes","profileReducer","newPost","postId","Post","maxLength10","Posts","memo","postElements","reverse","addPosts","PostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","setUserProfile","resutCode","withRouter","Header","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","messages","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","path","app","sidebar","sidebarReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef815dc8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                          onClick={ () => { props.unfollow(user.id); }}>UnFollow</button>\r\n                                :  <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                           onClick={ () => { props.follow(user.id); }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users.filter(u => true);\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for...math... big array\r\n    let count = 12;\r\n    return count;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer);","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newPostText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddDialogFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddDialogForm);\r\n\r\nexport default AddDialogFormRedux;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddDialogFormRedux from \"./Sections/AddPostForm/AddDialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <AddDialogFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import \"./dialogs.css\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {useEffect, useState} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    //\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div className=\"profile-status\">\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activeEditMode}>{props.status || \"No status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactiveEditMode} type=\"text\" value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return  {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then( response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    };\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then( response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(status).then( response => {\r\n            if (response.data.resutCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message...\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React, {memo} from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = memo(props => {\r\n    let postElements = [...props.postsData].reverse().map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n};\r\n\r\nexport default authReducer;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field placeholder=\"Email\" name=\"email\"\r\n                      type=\"email\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <Field placeholder=\"Password\" name=\"password\"\r\n                      type=\"password\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <label>\r\n                   <Field name=\"rememberMe\" type=\"checkbox\"\r\n                          component={Input}/>\r\n                   <span>remember me</span>\r\n               </label>\r\n           </div>\r\n           { props.error && <div className=\"form-summary-error\">\r\n               {props.error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","import React, {Component} from \"react\";\nimport {\n    Switch,\n    Route, withRouter\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App/>\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}