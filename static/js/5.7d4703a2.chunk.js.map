{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["wsChannel","WebSocket","Message","message","src","photo","alt","style","width","userName","Messages","useState","messages","setMassages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","height","overflowY","map","m","index","AddMessageForm","setMessage","onChange","currentTarget","value","onClick","send","Chat","ChatPage"],"mappings":"+JAGMA,EAAY,IAAIC,UAAU,gEAS1BC,EAA0C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE/C,OACI,gCACI,qBAAKC,IAAKD,EAAQE,MAAOC,IAAI,SAASC,MAAO,CAAEC,MAAO,UACtD,4BAAIL,EAAQM,WACZ,uBACA,4BACKN,EAAQA,UAEb,2BAKNO,EAAe,WACjB,MAAgCC,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,qBAAU,WACNd,EAAUe,iBAAiB,WAAW,SAACC,GACnC,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAACQ,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,IAGC,qBAAKV,MAAO,CAAEe,OAAQ,QAASC,UAAW,QAA1C,SACKX,EAASY,KAAI,SAACC,EAAGC,GAAJ,OAAsB,cAACxB,EAAD,CAAqBC,QAASsB,GAAhBC,SAKxDC,EAAqB,WAEvB,MAA8BhB,mBAAS,IAAvC,mBAAOR,EAAP,KAAgByB,EAAhB,KAUA,OACI,iDAEI,8BACI,0BAAUC,SAAU,SAACb,GAAD,OAAOY,EAAWZ,EAAEc,cAAcC,QAAQA,MAAO5B,MAEzE,8BACI,cAAC,IAAD,CAAQ6B,QAfA,WACX7B,IAGLH,EAAUiC,KAAK9B,GACfyB,EAAW,MAUH,wBAMVM,EAAW,WACb,OACI,gCACI,cAACxB,EAAD,IACA,cAACiB,EAAD,QAaGQ,UARM,WACjB,OACI,8BACI,cAACD,EAAD","file":"static/js/5.7d4703a2.chunk.js","sourcesContent":["import { Button } from \"antd\";\r\nimport React, {FC, useEffect, useState} from \"react\";\r\n\r\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n\r\ntype ChatMessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string,\r\n}\r\n\r\nconst Message: FC<{message: ChatMessageType}> = ({ message }) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={message.photo} alt=\"avatar\" style={{ width: '30px' }} />\r\n            <b>{message.userName}</b>\r\n            <br/>\r\n            <p>\r\n                {message.message}\r\n            </p>\r\n            <hr/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Messages: FC = () => {\r\n    const [messages, setMassages] = useState<ChatMessageType[]>([]);\r\n\r\n    useEffect(() => {\r\n        wsChannel.addEventListener('message', (e: MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data);\r\n            setMassages((prevMessages) => [...prevMessages, ...newMessages]);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ height: '400px', overflowY: 'auto' }}>\r\n            {messages.map((m, index: number) => <Message key={index} message={m} />)}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm: FC = () => {\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\n        wsChannel.send(message);\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            AddMessageForm\r\n            <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message} />\r\n            </div>\r\n            <div>\r\n                <Button onClick={sendMessage}>Send</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Chat: FC = () => {\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ChatPage: FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChatPage;"],"sourceRoot":""}