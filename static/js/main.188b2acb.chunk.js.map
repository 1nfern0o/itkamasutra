{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","reportWebVitals.js","components/Menu/menu.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/user.jsx","components/Users/users.jsx","redux/users-selectors.js","components/Users/usersContainer.jsx","components/Header/header.jsx","redux/auth-reducer.js","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspence.js","App.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","utils/Validators/validators.js","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Menu","className","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","User","src","photos","small","alt","followed","disabled","some","fullName","Users","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","props","requestUsers","this","Preloader","Component","compose","connect","bind","page","totalCount","Header","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","messages","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebar","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","AppContainer","withRouter","SamuraiJSApp","ReactDOM","render","StrictMode","document","getElementById","FormControl","meta","touched","children","hasError","Textarea","input","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likes","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","resutCode","newPost","postId"],"mappings":"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","file":"static/js/main.188b2acb.chunk.js","sourcesContent":["const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId.userId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: true})\r\n                // users: state.users.map( user => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {\r\n                //             ...user,\r\n                //             followed: true\r\n                //         }\r\n                //     }\r\n                //     return user;\r\n                // }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: false})\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({totalItemsCount, currentPage, onPageChanged, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className=\"paginator\">\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span className={`${(currentPage === p ?\"user__page-select\": \"\")} user__page-number`}\r\n                          key={p}\r\n                          onClick={() => { onPageChanged(p) }}>{p}</span>\r\n                ))\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n            <div className=\"user\">\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + user.id}>\r\n                            <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        { user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={ () => { unfollow(user.id); }}>UnFollow</button>\r\n                            :  <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                       onClick={ () => { follow(user.id); }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.fullName}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{user.id}</div>\r\n                        <div>{`user.location.country`}</div>\r\n                        <div>{`user.location.city`}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./user\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, followingInProgress, unfollow, follow}, ...props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {users.map(user => (\r\n                    <User user={user}\r\n                         followingInProgress={followingInProgress}\r\n                         follow={follow}\r\n                         unfollow={unfollow}\r\n                         key={user.id}\r\n                     />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users.filter(u => true);\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for...math... big array\r\n    let count = 12;\r\n    return count;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer);","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n   return (\r\n       <form onSubmit={handleSubmit}>\r\n           {createField(\"Email\", \"email\", [required], Input)}\r\n           {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n           {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n           { error && <div className=\"form-summary-error\">\r\n               {error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<h1>Loading profile...</h1>}>\r\n                <Component {...props}/>\r\n            </Suspense>\r\n            )\r\n    }\r\n};","import React, {Component, lazy} from \"react\";\nimport {\n    Switch,\n    Route, withRouter, BrowserRouter as Router\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspence\";\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/dialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/profileContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            {withSuspense(DialogsContainer)}\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            {withSuspense(ProfileContainer)}\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);;\n\nconst SamuraiJSApp = (props) => {\n    return <Router>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </Router>\n};\n\nexport default SamuraiJSApp;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <SamuraiJSApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}/>{text}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return  {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await  profileAPI.getProfile(status);\r\n    if (response.data.resutCode === 0) dispatch(setStatus(status));\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}