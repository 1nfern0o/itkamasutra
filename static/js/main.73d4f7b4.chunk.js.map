{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Menu/menu.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/common/FormsControls/FormsControls.js","utils/Validators/validators.js","components/Dialogs/Sections/AddPostForm/AddDialogForm.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","post","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","message","likes","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","SEND_MESSAGE","dialogsData","name","messagesData","dialogsReducer","body","newMessageBody","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","count","filter","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Menu","className","to","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","disabled","some","unfollow","follow","fullName","Preloader","preloader","mapStateToPropsForRedirect","withAuthRedirect","Components","RedirectComponent","this","Component","connect","UsersContainer","pageNumber","getUsers","compose","followSuccess","unfollowSuccess","setCurrentPage","setUsers","items","totalCount","DialogItem","MessageItem","FormControl","input","meta","hasError","touched","error","children","Textarea","restProps","child","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddDialogFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","dialog","messageElements","values","sendMessage","sendMessageCreator","ProfileStatus","editMode","activeEditMode","setState","deactiveEditMode","onStatusChange","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","maxLength10","Posts","postElements","addPosts","PostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","getUserProfile","setUserProfile","resutCode","withRouter","Header","logout","HeaderContainer","LoginReduxForm","messages","stopSubmit","_error","formData","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73d4f7b4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then( response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    };\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then( response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(status).then( response => {\r\n            if (response.data.resutCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n};\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                          onClick={ () => { props.unfollow(user.id); }}>UnFollow</button>\r\n                                :  <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                           onClick={ () => { props.follow(user.id); }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newPostText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddDialogFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddDialogForm);\r\n\r\nexport default AddDialogFormRedux;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddDialogFormRedux from \"./Sections/AddPostForm/AddDialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <AddDialogFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import \"./dialogs.css\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {Component} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nclass ProfileStatus extends Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n    deactiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile-status\">\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode}>{this.props.status || \"No status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactiveEditMode} type=\"text\" value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message...\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            debugger\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field placeholder=\"Email\" name=\"email\"\r\n                      type=\"email\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <Field placeholder=\"Password\" name=\"password\"\r\n                      type=\"password\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <label>\r\n                   <Field name=\"rememberMe\" type=\"checkbox\"\r\n                          component={Input}/>\r\n                   <span>remember me</span>\r\n               </label>\r\n           </div>\r\n           { props.error && <div className=\"form-summary-error\">\r\n               {props.error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}