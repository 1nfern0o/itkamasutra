{"version":3,"sources":["reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/Header/header.jsx","components/Menu/menu.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","App.js","StoreContext.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","message","likes","newPostText","profileReducer","state","action","type","newPost","push","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","sidebar","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","store","createStore","Header","className","src","alt","Menu","to","ProfileInfo","props","Post","Posts","postElements","map","post","newPostElement","React","createRef","ref","value","onChange","text","current","updateNewPostText","onClick","addPosts","PostsContainer","getState","updateNewPostTextActionCreator","dispatch","Profile","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","App","exact","path","StoreContext","createContext","rerenderEntireTree","ReactDOM","render","StrictMode","Provider","document","getElementById","subscribe"],"mappings":"oUAAA,IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAW,WACXC,EAAuB,uBAEzBC,EAAe,CACfC,UAAW,CACP,CACIC,GAAI,EACJC,QAAS,iBACTC,MAAO,IAEX,CACIF,GAAI,EACJC,QAAS,qBACTC,MAAO,GAEX,CACIF,GAAI,EACJC,QAAS,oBACTC,MAAO,MAGfC,YAAa,YA4BFC,EAzBQ,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKX,EACD,IAAIY,EAAU,CACVR,GAAI,EACJC,QAASI,EAAMF,YACfD,MAAO,GAIX,OAFAG,EAAMN,UAAUU,KAAKD,GACrBH,EAAMF,YAAc,GACbE,EACX,KAAKR,EAED,OADAQ,EAAMF,YAAcG,EAAOI,QACpBL,EACX,QACI,OAAOA,ICvCbM,EAA0B,0BAC1BC,EAAe,eAEjBd,EAAe,CACfe,YAAa,CACT,CACIb,GAAI,EACJc,KAAM,SAEV,CACId,GAAI,EACJc,KAAM,UAEV,CACId,GAAI,EACJc,KAAM,SAEV,CACId,GAAI,EACJc,KAAM,WAGdC,aAAc,CACV,CACIf,GAAI,EACJC,QAAS,aAEb,CACID,GAAI,EACJC,QAAS,YAEb,CACID,GAAI,EACJC,QAAS,OAGjBe,eAAgB,IAwBLC,EArBQ,WAAmC,IAAlCZ,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKI,EAED,OADAN,EAAMW,eAAiBV,EAAOY,KACvBb,EACX,KAAKO,EACD,IAAIM,EAAOb,EAAMW,eAGjB,OAFAX,EAAMW,eAAiB,GACvBX,EAAMU,aAAaN,KAAK,CAACT,GAAI,EAAGC,QAASiB,IAClCb,EACX,QACI,OAAOA,IClDfP,EAAe,CACfqB,QAAS,IAQEC,EALQ,WAAmC,IAAlCf,EAAiC,uDAAzBP,EAE5B,OAAOO,GCDPgB,EAAWC,YAAgB,CAC3BC,YAAanB,EACboB,YAAaP,EACbE,QAASC,IAKEK,EAFHC,YAAYL,G,oECATM,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKA,UAAU,OAAOC,IAAI,0HAA0HC,IAAI,mBCgBrJC,G,MAlBF,WACT,OACI,qBAAKH,UAAU,OAAf,SACI,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,aAAd,SACI,cAAC,IAAD,CAASI,GAAG,QAAQJ,UAAU,kBAA9B,oBAEJ,6BACI,cAAC,IAAD,CAASI,GAAG,WAAWJ,UAAU,kBAAjC,uBAEJ,6BACI,cAAC,IAAD,CAASI,GAAG,WAAWJ,UAAU,kBAAjC,+BCCLK,G,YAbK,SAACC,GACjB,OACI,gCACI,8BACI,qBAAKN,UAAU,eAAeC,IAAI,4GAA4GC,IAAI,OAEtJ,qBAAKF,UAAU,oBAAf,8BCOGO,G,YAbF,SAACD,GACV,OACI,sBAAKN,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAiBC,IAAI,mEAAmEC,IAAI,KAC3G,+BAAOI,EAAMjC,UACb,gCACI,wCACA,+BAAOiC,EAAMhC,gBC8BdkC,EApCD,SAACF,GACX,IAAIG,EAAeH,EAAMnC,UAAUuC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMtC,QAASsC,EAAKtC,QAASC,MAAOqC,EAAKrC,WAElFsC,EAAiBC,IAAMC,YAc7B,OACI,sBAAKd,UAAU,OAAf,UACI,yCACA,gCACI,8BACI,0BAAUe,IAAKH,EAAgBI,MAAOV,EAAM/B,YAAa0C,SAZpD,WACjB,IAAIC,EAAON,EAAeO,QAAQH,MAClCV,EAAMc,kBAAkBF,QAYhB,8BACI,wBAAQG,QApBL,WACff,EAAMgB,YAmBM,2BAGR,qBAAKtB,UAAU,QAAf,SACKS,QCPFc,EApBQ,SAACjB,GAEpB,IAAI7B,EAAQ6B,EAAMT,MAAM2B,WAWxB,OAAQ,cAAC,EAAD,CAAOJ,kBALM,SAACF,GACd,IAAIxC,ET6B8B,SAACwC,GAAD,MAAW,CACrDvC,KAAMV,EACNa,QAASoC,GS/BaO,CAA+BP,GAC7CZ,EAAMT,MAAM6B,SAAShD,IAId4C,SAVE,WACbhB,EAAMT,MAAM6B,STgCuB,CAAC/C,KAAMX,KStB/BG,UAAWM,EAAMkB,YAAYxB,UAC7BI,YAAaE,EAAMkB,YAAYpB,eCRnCoD,EATC,SAACrB,GACb,OACI,sBAAKN,UAAU,UAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAgBH,MAAOS,EAAMT,YCG1B+B,G,YARI,SAACtB,GAChB,OACI,qBAAKN,UAAU,gBAAf,SACI,eAAC,IAAD,CAASI,GAAE,kBAAaE,EAAMlC,IAA9B,UAAqCkC,EAAMpB,KAA3C,WCIG2C,G,MARK,SAACvB,GACjB,OACI,qBAAKN,UAAU,iBAAf,SACI,+BAAOM,EAAMjC,cCsCVyD,EAvCC,SAACxB,GAEb,IAAI7B,EAAQ6B,EAAMV,YAEdmC,EAAkBtD,EAAMQ,YAAYyB,KAAI,SAAAsB,GAAM,OAAI,cAAC,EAAD,CAAY9C,KAAM8C,EAAO9C,KAAMd,GAAI4D,EAAO5D,QAC5F6D,EAAkBxD,EAAMU,aAAauB,KAAI,SAAArC,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,EAAQA,aAClFe,EAAiBX,EAAMW,eAW3B,OACI,sBAAKY,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAf,SACM+B,IAEN,sBAAK/B,UAAU,WAAf,UACI,8BAAOiC,IACP,gCACI,8BACI,0BAAUjB,MAAO5B,EACP6B,SAfL,SAACiB,GACvB,IAAI5C,EAAO4C,EAAEC,OAAOnB,MACpBV,EAAM8B,qBAAqB9C,IAcA+C,YAAY,yBAE1B,8BACI,wBAAQhB,QAvBH,WACrBf,EAAMgC,eAsBU,8BCZTC,EAlBU,SAACjC,GACtB,IAAI7B,EAAQ6B,EAAMT,MAAM2B,WAAW5B,YAUnC,OAAQ,cAAC,EAAD,CACJwC,qBALqB,SAAC9C,GACvBgB,EAAMT,MAAM6B,SbyCwB,SAACpC,GAAD,MAAW,CAClDX,KAAMI,EACNO,KAAMA,Ga3CkBkD,CAA4BlD,KAKhDgD,YAVqB,WACrBhC,EAAMT,MAAM6B,Sb4CqB,CAAC/C,KAAMK,KalCxCY,YAAanB,KCaNgE,MArBf,SAAanC,GACT,OACI,cAAC,IAAD,UACI,sBAAKN,UAAU,eAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,uBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAAS9C,MAAOS,EAAMT,UAE1B,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAAkB9C,MAAOS,EAAMT,qBCpB5C+C,EAFM/B,IAAMgC,cAAc,MCKrCC,EAAqB,SAACrE,GACtBsE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAAC,EAAaC,SAAd,CAAuBlC,MAAOnB,EAA9B,gBAIS,cAAC,EAAD,SAGbsD,SAASC,eAAe,UAIhCN,EAAmBjD,EAAM2B,YAEzB3B,EAAMwD,WAAU,WACAxD,EAAM2B,WAClBsB,OAOJvF,M","file":"static/js/main.6f174c2c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    newPostText: 'it-roman',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            state.postsData.push(newPost);\r\n            state.newPostText = \"\";\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body;\r\n            return state;\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            state.newMessageBody = '';\r\n            state.messagesData.push({id: 6, message: body});\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from \"react\"\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const onAddPosts = () => {\r\n        props.addPosts();\r\n        //props.dispatch(addPostActionCreator()); Находится в postsContainer для того чтобы очистить posts от dispatch\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n       // let action =  updateNewPostTextActionCreator(text);  Находится в postsContainer для того чтобы очистить posts от dispatch\r\n       // props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} value={props.newPostText} onChange={ onPostChange }/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\n\r\n\r\n\r\nconst PostsContainer = (props) => {\r\n\r\n    let state = props.store.getState();\r\n\r\n    const addPosts = () => {\r\n        props.store.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    const onPostChange = (text) => {\r\n            let action =  updateNewPostTextActionCreator(text);\r\n            props.store.dispatch(action);\r\n    };\r\n\r\n    return (<Posts updateNewPostText={onPostChange}\r\n                   addPosts={addPosts}\r\n                   postsData={state.profilePage.postsData}\r\n                   newPostText={state.profilePage.newPostText}\r\n    />);\r\n};\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo />\r\n            <PostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.store.dispatch(sendMessageCreator());\r\n    };\r\n\r\n    let onNewMessageChange = (body) => {\r\n       props.store.dispatch(updateNewMessageBodyCreator(body));\r\n    };\r\n\r\n    return (<Dialogs\r\n        updateNewMessageBody={onNewMessageChange}\r\n        sendMessage={onSendMessageCLick}\r\n        dialogsPage={state}\r\n    />)\r\n}\r\n\r\nexport default DialogsContainer;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/header.jsx\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport Profile from \"./components/Profile/profile.jsx\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\n\nfunction App(props) {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <Header/>\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route exact path=\"/profile\">\n                            <Profile store={props.store} />\n                        </Route>\n                        <Route exact path=\"/dialogs\">\n                            <DialogsContainer store={props.store} />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport default StoreContext;","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport StoreContext from \"./StoreContext\";\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <StoreContext.Provider value={store}>   {/*Глобальный пропс, чтобы не засорять App*/}\n            {/*<App state={state}\n                     dispatch={store.dispatch.bind(store)}\n                     store={store}/>Всмето этого*/}\n                     <App />\n            </StoreContext.Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state);\n});\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}