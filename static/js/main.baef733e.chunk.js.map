{"version":3,"sources":["reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Menu/menu.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","postsData","id","message","likes","newPostText","profile","profileReducer","state","action","type","newPost","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","user","userId","followed","count","SET_USER_DATA","email","login","isAuth","authReducer","data","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","store","createStore","window","Menu","className","to","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","axios","withCredentials","headers","response","resultCode","unfollow","follow","fullName","status","Preloader","preloader","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","setUsers","items","this","setTotalUsersCount","totalCount","Component","connect","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","value","onChange","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","dispatch","updateNewMessageBodyCreator","ProfileInfo","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","Posts","postElements","post","newPostElement","React","createRef","text","current","updateNewPostText","ref","addPosts","PostsContainer","updateNewPostTextActionCreator","Profile","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","HeaderContainer","setAuthUserData","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baef733e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = \"ADD_POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    newPostText: 'it-roman',\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        }\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollow = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport default usersReducer;","const SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        userId,\r\n        email,\r\n        login\r\n    }\r\n});\r\n\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button onClick={ () => {\r\n\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${user.id}`, {\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                            \"API-KEY\": \"d0ce4cd8-d0d2-4152-99ad-f6e1407cb23f\"\r\n                                        }\r\n                                    })\r\n                                        .then( response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.unfollow(user.id);\r\n                                            }\r\n                                        });\r\n                                }}>UnFollow</button>\r\n                                :  <button onClick={ () => {\r\n\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${user.id}`, {}, {\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                            \"API-KEY\": \"d0ce4cd8-d0d2-4152-99ad-f6e1407cb23f\"\r\n                                        }\r\n                                    })\r\n                                        .then( response => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.follow(user.id);\r\n                                            }\r\n                                        });\r\n                                }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then( response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then( response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching })(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const onAddPosts = () => {\r\n        props.addPosts();\r\n        //props.dispatch(addPostActionCreator()); Находится в postsContainer для того чтобы очистить posts от dispatch\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n       // let action =  updateNewPostTextActionCreator(text);  Находится в postsContainer для того чтобы очистить posts от dispatch\r\n       // props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPosts: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 1;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then( response => {\r\n                this.props.setUserProfile(response.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? props.login\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials: true\r\n        })\r\n            .then( response => {\r\n                if(response.data.resultCode === 0 ) {\r\n                    let {id, email, login} = response.data.data;\r\n                    this.props.setAuthUserData(id, email, login);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer);","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}