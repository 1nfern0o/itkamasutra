{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Menu/menu.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","delete","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","postsData","id","message","likes","newPostText","profile","profileReducer","state","action","type","newPost","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","count","filter","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Menu","className","to","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","disabled","some","unfollow","follow","fullName","status","Preloader","preloader","mapStateToPropsForRedirect","withAuthRedirect","Components","RedirectComponent","this","Component","connect","UsersContainer","pageNumber","getUsers","compose","dispatch","resultCode","followSuccess","unfollowSuccess","setCurrentPage","setUsers","items","totalCount","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","value","onChange","target","updateNewMessageBody","placeholder","sendMessage","updateNewMessageBodyCreator","ProfileInfo","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","Posts","postElements","post","newPostElement","React","createRef","text","current","updateNewPostText","ref","addPosts","PostsContainer","updateNewPostTextActionCreator","Profile","ProfileContainer","match","params","getUserProfile","setUserProfile","withRouter","Header","HeaderContainer","getAuthUserData","setAuthUserData","Login","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94848630.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    }\r\n};","import {usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE_NEW_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    newPostText: 'it-roman',\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then( response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    };\r\n}\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        }\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        userId,\r\n        email,\r\n        login\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                          onClick={ () => { props.unfollow(user.id); }}>UnFollow</button>\r\n                                :  <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                           onClick={ () => { props.follow(user.id); }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import \"./dialogs.css\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const onAddPosts = () => {\r\n        props.addPosts();\r\n        //props.dispatch(addPostActionCreator()); Находится в postsContainer для того чтобы очистить posts от dispatch\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n       // let action =  updateNewPostTextActionCreator(text);  Находится в postsContainer для того чтобы очистить posts от dispatch\r\n       // props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPosts: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);            /*\r\n                                    Вместо этого -\r\n                                    let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n                                    const WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n                                    export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n                                */\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? props.login\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from \"react\";\r\nimport \"./login.css\";\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}