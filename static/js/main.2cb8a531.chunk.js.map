{"version":3,"sources":["reportWebVitals.js","components/Menu/menu.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/user.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/usersContainer.jsx","redux/dialogs-reducer.js","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/common/FormsControls/FormsControls.js","utils/Validators/validators.js","components/Dialogs/Sections/AddPostForm/AddDialogForm.jsx","components/Dialogs/dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","redux/auth-reducer.js","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Menu","className","to","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","count","filter","id","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","User","src","photos","small","alt","followed","disabled","some","fullName","Users","Preloader","props","preloader","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Component","compose","connect","bind","page","totalCount","SEND_MESSAGE","dialogsData","name","messagesData","message","dialogsReducer","body","newMessageBody","DialogItem","MessageItem","FormControl","meta","touched","error","children","hasError","Textarea","input","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","required","value","maxLengthCreator","maxLength","length","maxLength50","AddDialogFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","dialog","messageElements","isAuth","values","sendMessage","newPostText","mapStateToPropsForRedirect","auth","withAuthRedirect","Components","RedirectComponent","sendMessageCreator","ProfileStatus","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","profile","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likes","profileReducer","newPost","postId","Post","maxLength10","Posts","memo","postElements","reverse","addPosts","PostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","resutCode","withRouter","Header","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","messages","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebar","sidebarReducer","reducers","combineReducers","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","App","initializeApp","path","AppContainer","SamuraiJSApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cb8a531.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId.userId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: true})\r\n                // users: state.users.map( user => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {\r\n                //             ...user,\r\n                //             followed: true\r\n                //         }\r\n                //     }\r\n                //     return user;\r\n                // }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: false})\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({totalItemsCount, currentPage, onPageChanged, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className=\"paginator\">\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span className={`${(currentPage === p ?\"user__page-select\": \"\")} user__page-number`}\r\n                          key={p}\r\n                          onClick={() => { onPageChanged(p) }}>{p}</span>\r\n                ))\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n            <div className=\"user\">\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + user.id}>\r\n                            <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        { user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={ () => { unfollow(user.id); }}>UnFollow</button>\r\n                            :  <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                       onClick={ () => { follow(user.id); }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.fullName}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{user.id}</div>\r\n                        <div>{`user.location.country`}</div>\r\n                        <div>{`user.location.city`}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./user\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, followingInProgress, unfollow, follow}, ...props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {users.map(user => (\r\n                    <User user={user}\r\n                         followingInProgress={followingInProgress}\r\n                         follow={follow}\r\n                         unfollow={unfollow}\r\n                         key={user.id}\r\n                     />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users.filter(u => true);\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for...math... big array\r\n    let count = 12;\r\n    return count;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer);","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}/>{text}\r\n        </div>\r\n    )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newPostText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddDialogFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddDialogForm);\r\n\r\nexport default AddDialogFormRedux;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddDialogFormRedux from \"./Sections/AddPostForm/AddDialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <AddDialogFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import \"./dialogs.css\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {useEffect, useState} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    //\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div className=\"profile-status\">\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactiveEditMode}\r\n                           type=\"text\" value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{profile.contacts.facebook}</li>\r\n                        <li>{profile.contacts.website}</li>\r\n                        <li>{profile.contacts.vk}</li>\r\n                        <li>{profile.contacts.twitter}</li>\r\n                        <li>{profile.contacts.instagram}</li>\r\n                        <li>{profile.contacts.youtube}</li>\r\n                        <li>{profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return  {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await  profileAPI.getProfile(status);\r\n    if (response.data.resutCode === 0) dispatch(setStatus(status));\r\n};\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message...\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React, {memo} from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = memo(props => {\r\n    let postElements = [...props.postsData].reverse().map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n   return (\r\n       <form onSubmit={handleSubmit}>\r\n           {createField(\"Email\", \"email\", [required], Input)}\r\n           {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n           {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n           { error && <div className=\"form-summary-error\">\r\n               {error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Component} from \"react\";\nimport {\n    Switch,\n    Route, withRouter, BrowserRouter as Router\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);;\n\nconst SamuraiJSApp = (props) => {\n    return <Router>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </Router>\n};\n\nexport default SamuraiJSApp;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <SamuraiJSApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}