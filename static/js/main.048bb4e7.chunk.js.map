{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Menu/menu.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/Sections/AddPostForm/AddDialogForm.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","message","likes","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","SEND_MESSAGE","dialogsData","name","messagesData","dialogsReducer","body","newMessageBody","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","count","filter","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Menu","className","to","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","disabled","some","unfollow","follow","fullName","Preloader","preloader","mapStateToPropsForRedirect","withAuthRedirect","Components","RedirectComponent","this","Component","connect","UsersContainer","pageNumber","getUsers","compose","dispatch","resultCode","followSuccess","unfollowSuccess","setCurrentPage","setUsers","items","totalCount","DialogItem","MessageItem","AddDialogFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","dialogsElements","dialog","messageElements","values","sendMessage","sendMessageCreator","ProfileStatus","editMode","activeEditMode","setState","deactiveEditMode","onStatusChange","currentTarget","value","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","Posts","postElements","post","addPosts","PostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","getUserProfile","setUserProfile","resutCode","withRouter","Header","HeaderContainer","getAuthUserData","setAuthUserData","LoginReduxForm","Login","formData","log","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.048bb4e7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    }\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then( response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    };\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then( response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(status).then( response => {\r\n            if (response.data.resutCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({\r\n    type: SET_USER_DATA,\r\n    data: {\r\n        userId,\r\n        email,\r\n        login\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                          onClick={ () => { props.unfollow(user.id); }}>UnFollow</button>\r\n                                :  <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                           onClick={ () => { props.follow(user.id); }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component=\"textarea\" name=\"newPostText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddDialogFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddDialogForm);\r\n\r\nexport default AddDialogFormRedux;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddDialogFormRedux from \"./Sections/AddPostForm/AddDialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <AddDialogFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import \"./dialogs.css\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {Component} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nclass ProfileStatus extends Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    };\r\n\r\n    deactiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile-status\">\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode}>{this.props.status || \"No status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactiveEditMode} type=\"text\" value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component=\"textarea\" name=\"newPostText\" placeholder={props.value}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? props.login\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field placeholder=\"Login\" name=\"login\" component=\"input\"/>\r\n           </div>\r\n           <div>\r\n               <Field placeholder=\"Password\" name=\"password\" component=\"input\"/>\r\n           </div>\r\n           <div>\r\n               <label>\r\n                   <Field name=\"rememberMe\" type=\"checkbox\" component=\"input\"/>\r\n                   <span>remember me</span>\r\n               </label>\r\n           </div>\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}