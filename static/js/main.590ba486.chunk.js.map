{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/common/FormsControls/FormsControls.js","reportWebVitals.js","components/Menu/menu.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/user.jsx","components/Users/users.jsx","redux/users-selectors.js","components/Users/usersContainer.jsx","components/Header/header.jsx","redux/auth-reducer.js","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspence.js","App.js","index.js","utils/Validators/validators.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","meta","touched","error","children","hasError","className","Textarea","props","input","restProps","child","Input","createField","placeholder","validators","component","text","validate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Menu","to","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","User","src","photos","small","alt","followed","disabled","some","fullName","Users","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","Component","compose","connect","bind","page","totalCount","Header","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","messages","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","globalError","appReducer","sidebar","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","log","initializeApp","addEventListener","removeEventListener","exact","path","AppContainer","withRouter","SamuraiJSApp","ReactDOM","render","StrictMode","document","getElementById","value","maxLengthCreator","maxLength","preloader","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","postsData","likes","addPostActionCreator","newPostText","setStatus","getUserProfile","resutCode","file","date","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.590ba486.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/status/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha= null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}/>{text}\r\n        </div>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId.userId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: true})\r\n                // users: state.users.map( user => {\r\n                //     if (user.id === action.userId) {\r\n                //         return {\r\n                //             ...user,\r\n                //             followed: true\r\n                //         }\r\n                //     }\r\n                //     return user;\r\n                // }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {follow: false})\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let response = await usersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport \"./Paginator.css\";\r\n\r\nconst Paginator = ({totalItemsCount, currentPage, onPageChanged, pageSize, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className=\"paginator\">\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => (\r\n                    <span className={`${(currentPage === p ?\"user__page-select\": \"\")} user__page-number`}\r\n                          key={p}\r\n                          onClick={() => { onPageChanged(p) }}>{p}</span>\r\n                ))\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n            <div className=\"user\">\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + user.id}>\r\n                            <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        { user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={ () => { unfollow(user.id); }}>UnFollow</button>\r\n                            :  <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                       onClick={ () => { follow(user.id); }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.fullName}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{user.id}</div>\r\n                        <div>{`user.location.country`}</div>\r\n                        <div>{`user.location.city`}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./user\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, followingInProgress, unfollow, follow}, ...props) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {users.map(user => (\r\n                    <User user={user}\r\n                         followingInProgress={followingInProgress}\r\n                         follow={follow}\r\n                         unfollow={unfollow}\r\n                         key={user.id}\r\n                     />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users.filter(u => true);\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for...math... big array\r\n    let count = 12;\r\n    return count;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer);","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from '../api/api';\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"samurai-network/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null , then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.payload\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { userId,  email,  login,  isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return{\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        payload: captchaUrl\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        // success , get auth data\r\n        dispatch(getAuthUserData())\r\n    }  else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if(response.data.resultCode === 0 ) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    //debugger\r\n   return (\r\n       <form onSubmit={handleSubmit}>\r\n           {createField(\"Email\", \"email\", [required], Input)}\r\n           {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n           {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n           {captchaUrl && <img src={captchaUrl} alt={captchaUrl} /> }\r\n           {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n           { error && <div className=\"form-summary-error\">\r\n               {error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<h1>Loading profile...</h1>}>\r\n                <Component {...props}/>\r\n            </Suspense>\r\n            )\r\n    }\r\n};","import React, {Component, lazy} from \"react\";\nimport {\n    Switch,\n    Route, withRouter, BrowserRouter, Redirect\n} from 'react-router-dom';\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspence\";\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/dialogsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/profileContainer'));\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert(\"Some error occured \");\n        console.log(\"reason\", reason);\n        console.log(\"promise\", promise);\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route exact path=\"/\">\n                            {() => <Redirect to=\"/profile\" />}\n                        </Route>\n                        <Route path=\"/dialogs\">\n                            {withSuspense(DialogsContainer)}\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            {withSuspense(ProfileContainer)}\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                        <Route path=\"*\">\n                            <div>404 NOT FOUND</div>\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer =  compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);;\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n};\n\nexport default SamuraiJSApp;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <SamuraiJSApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return  {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            };\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return  {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\n\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos\r\n});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const response = await  profileAPI.getProfile(status);\r\n        if (response.data.resutCode === 0) dispatch(setStatus(status));\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await  profileAPI.savePhoto(file);\r\n    if (response.data.resutCode === 0) dispatch(savePhotoSuccess(response.data.date.photos));\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await  profileAPI.saveProfile(profile);\r\n    if (response.data.resutCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.message[0] }));\r\n        // dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {\"facebook\": response.data.message[0]} }));\r\n        return Promise.reject(response.data.message[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}