{"version":3,"sources":["reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/header.jsx","components/Menu/menu.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Users/usersApi.jsx","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","message","likes","newPostText","profileReducer","state","action","type","newPost","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","users","usersReducer","map","user","userId","followed","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","window","Header","className","src","alt","Menu","to","ProfileInfo","props","Post","Posts","postElements","post","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","onClick","addPosts","PostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","UsersApi","axios","response","setUsers","data","items","this","photos","small","unfollow","follow","fullName","status","Component","followActionCreator","unfollowActionCreator","setUserActionCreator","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3957b292.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    newPostText: 'it-roman',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        }\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\n\r\nlet initialState = {\r\n    users: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...state.users,\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followActionCreator = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowActionCreator = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUserActionCreator = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\"\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const onAddPosts = () => {\r\n        props.addPosts();\r\n        //props.dispatch(addPostActionCreator()); Находится в postsContainer для того чтобы очистить posts от dispatch\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n       // let action =  updateNewPostTextActionCreator(text);  Находится в postsContainer для того чтобы очистить posts от dispatch\r\n       // props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const PostsContainer = () => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n                let state = store.getState();\r\n                const addPosts = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                };\r\n\r\n                const onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                };\r\n                return <Posts updateNewPostText={onPostChange}\r\n                              addPosts={addPosts}\r\n                              postsData={state.profilePage.postsData}\r\n                              newPostText={state.profilePage.newPostText}/>\r\n\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    );\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPosts: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./users.css\";\r\nimport * as axios from \"axios\";\r\n\r\nclass UsersApi extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\")\r\n            .then( response => {\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.props.users.map(user => (\r\n                    <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button onClick={ () => {this.props.unfollow(user.id)}}>UnFollow</button>\r\n                                :  <button onClick={ () => {this.props.follow(user.id)}}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UsersApi;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {followActionCreator, setUserActionCreator, unfollowActionCreator} from \"../../redux/users-reducer\";\r\nimport UsersApi from \"./usersApi\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followActionCreator(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowActionCreator(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUserActionCreator(users));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersApi);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const DialogsContainer = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        { (store) => {\r\n            let onSendMessageCLick = () => {\r\n                store.dispatch(sendMessageCreator());\r\n            };\r\n\r\n            let onNewMessageChange = (body) => {\r\n                store.dispatch(updateNewMessageBodyCreator(body));\r\n            };\r\n            return <Dialogs\r\n                updateNewMessageBody={onNewMessageChange}\r\n                sendMessage={onSendMessageCLick}\r\n                dialogsPage={store.getState().dialogsPage}\r\n            />\r\n        }\r\n    }\r\n        </StoreContext.Consumer>\r\n\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/header.jsx\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport Profile from \"./components/Profile/profile.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\n\nfunction App(props) {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <Header/>\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route exact path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile />\n                        </Route>\n                        <Route exact path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}