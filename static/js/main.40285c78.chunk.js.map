{"version":3,"sources":["reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/header.jsx","components/Menu/menu.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Users/usersFunc.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","message","likes","newPostText","profileReducer","state","action","type","newPost","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsData","name","messagesData","newMessageBody","dialogsReducer","body","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","user","userId","followed","count","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","window","Header","className","src","alt","Menu","to","ProfileInfo","props","Post","Posts","postElements","post","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","onClick","addPosts","PostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","UsersFunc","pageCount","Math","ceil","pages","i","push","p","e","onPageChanged","photos","small","unfollow","follow","fullName","status","Preloader","preloader","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","axios","response","setUsers","data","items","this","setTotalUsersCount","totalCount","Component","followActionCreator","unfollowActionCreator","setUserActionCreator","toggleIsFetchingAC","DialogItem","MessageItem","Dialogs","dialogsElements","dialog","messageElements","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40285c78.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    newPostText: 'it-roman',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n});\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ],\r\n    newMessageBody: \"\",\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        }\r\n\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followActionCreator = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowActionCreator = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUserActionCreator = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPageAC = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\nexport const toggleIsFetchingAC = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\"\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\n\r\nconst Posts = (props) => {\r\n    let postElements = props.postsData.map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    const newPostElement = React.createRef();\r\n\r\n    const onAddPosts = () => {\r\n        props.addPosts();\r\n        //props.dispatch(addPostActionCreator()); Находится в postsContainer для того чтобы очистить posts от dispatch\r\n    };\r\n\r\n    const onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n       // let action =  updateNewPostTextActionCreator(text);  Находится в postsContainer для того чтобы очистить posts от dispatch\r\n       // props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPosts }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const PostsContainer = () => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            { (store) => {\r\n                let state = store.getState();\r\n                const addPosts = () => {\r\n                    store.dispatch(addPostActionCreator());\r\n                };\r\n\r\n                const onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text);\r\n                    store.dispatch(action);\r\n                };\r\n                return <Posts updateNewPostText={onPostChange}\r\n                              addPosts={addPosts}\r\n                              postsData={state.profilePage.postsData}\r\n                              newPostText={state.profilePage.newPostText}/>\r\n\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    );\r\n};*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPosts: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./users.css\";\r\n\r\nconst UsersFunc = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button onClick={ () => {props.unfollow(user.id)}}>UnFollow</button>\r\n                                :  <button onClick={ () => {props.follow(user.id)}}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersFunc;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followActionCreator,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC,\r\n    setUserActionCreator,\r\n    toggleIsFetchingAC,\r\n    unfollowActionCreator\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport UsersFunc from \"./usersFunc\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then( response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then( response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <UsersFunc totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followActionCreator(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowActionCreator(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUserActionCreator(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageCLick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n       let body = e.target.value;\r\n       props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder=\"Enter your message\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageCLick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n/*const DialogsContainer = () => {\r\n\r\n    return <StoreContext.Consumer>\r\n        { (store) => {\r\n            let onSendMessageCLick = () => {\r\n                store.dispatch(sendMessageCreator());\r\n            };\r\n\r\n            let onNewMessageChange = (body) => {\r\n                store.dispatch(updateNewMessageBodyCreator(body));\r\n            };\r\n            return <Dialogs\r\n                updateNewMessageBody={onNewMessageChange}\r\n                sendMessage={onSendMessageCLick}\r\n                dialogsPage={store.getState().dialogsPage}\r\n            />\r\n        }\r\n    }\r\n        </StoreContext.Consumer>\r\n\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/header.jsx\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport Profile from \"./components/Profile/profile.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\n\nfunction App(props) {\n    return (\n        <Router>\n            <div className=\"app__wrapper\">\n                <Header/>\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route exact path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile />\n                        </Route>\n                        <Route exact path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n                 <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}