{"version":3,"sources":["reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Menu/menu.jsx","components/Users/users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/usersContainer.jsx","components/Dialogs/Sections/DialogItem/dialogItem.jsx","components/Dialogs/Sections/Message/message.jsx","components/common/FormsControls/FormsControls.js","utils/Validators/validators.js","components/Dialogs/Sections/AddPostForm/AddDialogForm.jsx","components/Dialogs/dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/dialogsContainer.jsx","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.jsx","components/Login/Sections/LoginForm.jsx","components/Login/Login.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","post","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","message","likes","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","SEND_MESSAGE","dialogsData","name","messagesData","dialogsReducer","body","newMessageBody","sidebar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","count","filter","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Menu","className","to","Users","props","pageCount","Math","ceil","pages","i","push","p","onClick","e","onPageChanged","src","photos","small","alt","disabled","some","unfollow","follow","fullName","Preloader","preloader","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Component","compose","connect","followSuccess","unfollowSuccess","page","setUsers","items","totalCount","DialogItem","MessageItem","FormControl","input","meta","hasError","touched","error","children","Textarea","restProps","child","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddDialogFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","dialog","messageElements","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Components","RedirectComponent","sendMessageCreator","ProfileStatus","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","maxLength10","Posts","memo","postElements","reverse","addPosts","PostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","setUserProfile","resutCode","withRouter","Header","logout","HeaderContainer","LoginReduxForm","messages","stopSubmit","_error","formData","App","initializeApp","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ad9441b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c4158ed8-d0fa-48f5-978e-b07ad1bf0132\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi, who are u?\",\r\n            likes: 12\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi, who are u Doe?\",\r\n            likes: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Hi, who are John?\",\r\n            likes: 129\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return  {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n});\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n});\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then( response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    };\r\n};\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then( response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(status).then( response => {\r\n            if (response.data.resutCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Roman\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Dimych\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Petro\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Andrey\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {\r\n            id: 1,\r\n            message: \"Hi world!\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Hi wrld!\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    sidebar: {},\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [4, 5]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return  {\r\n                ...state,\r\n                users: state.users.map( user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.users\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then( response => {\r\n            if(response.data.resultCode === 0 ) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__list\">\r\n                <li className=\"menu__item\">\r\n                    <NavLink to=\"/home\" className=\"menu__item-link\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/profile\" className=\"menu__item-link\">Profile</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/dialogs\" className=\"menu__item-link\">Messages</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/users\" className=\"menu__item-link\">Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./users.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => (\r\n                    <span className={`user__page-number ${props.currentPage === p && \"user__page-select\"}`}\r\n                          onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n                ))}\r\n            </div>\r\n\r\n            {props.users.map(user => (\r\n                <div className=\"user\" key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                                <img className=\"user__avatar\" src={`${user.photos.small != null ? user.photos.small : \"https://images.pexels.com/photos/1312023/pexels-photo-1312023.jpeg?cs=srgb&dl=pexels-michael-morse-1312023.jpg&fm=jpg\"}`} alt=\"\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            { user.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                          onClick={ () => { props.unfollow(user.id); }}>UnFollow</button>\r\n                                :  <button disabled={props.followingInProgress.some(id => id === user.id)}\r\n                                           onClick={ () => { props.follow(user.id); }}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.fullName}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{`user.location.country`}</div>\r\n                            <div>{`user.location.city`}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.3ad5b43f.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"Preloader\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users.filter(u => true);\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger;\r\n    //for...math... big array\r\n    let count = 12;\r\n    return count;\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                                  pageSize={this.props.pageSize}\r\n                                  currentPage={this.props.currentPage}\r\n                                  onPageChanged={this.onPageChanged}\r\n                                  users={this.props.users}\r\n                                  follow={this.props.follow}\r\n                                  unfollow={this.props.unfollow}\r\n                                  followingInProgress={this.props.followingInProgress} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers})\r\n)(UsersContainer);","import React from \"react\";\r\nimport \"./dialogItem.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className=\"dialogs__item\">\r\n            <NavLink to={`dialogs/${props.id}`}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport \"./message.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">\r\n            <span>{props.message}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport \"./FormsControls.css\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/Validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddDialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newPostText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddDialogFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddDialogForm);\r\n\r\nexport default AddDialogFormRedux;","import React from \"react\";\r\nimport \"./dialogs.css\";\r\nimport DialogItem from \"./Sections/DialogItem/dialogItem.jsx\";\r\nimport MessageItem from \"./Sections/Message/message.jsx\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddDialogFormRedux from \"./Sections/AddPostForm/AddDialogForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElements = state.messagesData.map(message => <MessageItem message={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newPostText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__items\">\r\n                { dialogsElements }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>{ messageElements }</div>\r\n                <AddDialogFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import \"./dialogs.css\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {useEffect, useState} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    //\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div className=\"profile-status\">\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activeEditMode}>{props.status || \"No status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactiveEditMode} type=\"text\" value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{props.profile.contacts.facebook}</li>\r\n                        <li>{props.profile.contacts.website}</li>\r\n                        <li>{props.profile.contacts.vk}</li>\r\n                        <li>{props.profile.contacts.twitter}</li>\r\n                        <li>{props.profile.contacts.instagram}</li>\r\n                        <li>{props.profile.contacts.youtube}</li>\r\n                        <li>{props.profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message...\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React, {memo} from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = memo(props => {\r\n    let postElements = [...props.postsData].reverse().map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\"\r\nimport \"./header.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"logo\" src=\"https://image.neoseo.com.ua/image/catalog/foto_statti/topsovetovposozdanijubesplatnogologotipadljasajta/logo-design.png\" alt=\"Logo header\"/>\r\n            <div className=\"login-block\">\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className=\"login-block__link\" to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\"\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends Component{\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/Validators/validators\";\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field placeholder=\"Email\" name=\"email\"\r\n                      type=\"email\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <Field placeholder=\"Password\" name=\"password\"\r\n                      type=\"password\"\r\n                      validate={[required]}\r\n                      component={Input}/>\r\n           </div>\r\n           <div>\r\n               <label>\r\n                   <Field name=\"rememberMe\" type=\"checkbox\"\r\n                          component={Input}/>\r\n                   <span>remember me</span>\r\n               </label>\r\n           </div>\r\n           { props.error && <div className=\"form-summary-error\">\r\n               {props.error}\r\n           </div>}\r\n           <div>\r\n               <button>Login</button>\r\n           </div>\r\n       </form>\r\n   )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport \"./login.css\";\r\nimport LoginForm from \"./Sections/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React, {Component} from \"react\";\nimport {\n    Switch,\n    Route, withRouter\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/menu.jsx\";\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport DialogsContainer from \"./components/Dialogs/dialogsContainer\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app__wrapper\">\n                <HeaderContainer />\n                <Menu/>\n                <div className=\"app__wrapper_content\">\n                    <Switch>\n                        <Route path=\"/dialogs\">\n                            <DialogsContainer />\n                        </Route>\n                        <Route path=\"/profile/:userId?\">\n                            <ProfileContainer />\n                        </Route>\n                        <Route path=\"/users\">\n                            <UsersContainer />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router}from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}