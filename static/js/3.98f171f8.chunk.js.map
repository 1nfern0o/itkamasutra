{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Sections/ProfileStatus/ProfileStatus.jsx","components/Profile/Sections/ProfileInfo/ProfileInfo.jsx","components/Profile/Sections/Post/post.jsx","components/Profile/Sections/Posts/Sections/AddNewPostForm.jsx","components/Profile/Sections/Posts/posts.jsx","components/Profile/Sections/Posts/postsContainer.jsx","components/Profile/profile.jsx","components/Profile/profileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Components","RedirectComponent","this","props","to","Component","connect","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","type","ProfileInfo","profile","isOwner","savePhoto","Preloader","src","alt","photos","large","target","files","length","contacts","facebook","website","vk","twitter","instagram","youtube","github","Post","message","likes","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","Posts","memo","postElements","postsData","reverse","map","post","id","values","addPosts","newPostText","PostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.98f171f8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Components) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Components {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport \"./ProfileStatus.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    //\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div className=\"profile-status\">\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactiveEditMode}\r\n                           type=\"text\" value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./ProfileInfo.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className=\"content__img\" src=\"https://images.pexels.com/photos/2478248/pexels-photo-2478248.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"description-block\">\r\n                <img className=\"description-block__avatar\" src={profile.photos.large || \"https://images.pexels.com/photos/4126255/pexels-photo-4126255.jpeg?cs=srgb&dl=pexels-wesley-carvalho-4126255.jpg&fm=jpg\"} alt=\"\"/>\r\n                { isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/> }\r\n                <div className=\"description-block__contact\">\r\n                    <ul>\r\n                        <li>{profile.contacts.facebook}</li>\r\n                        <li>{profile.contacts.website}</li>\r\n                        <li>{profile.contacts.vk}</li>\r\n                        <li>{profile.contacts.twitter}</li>\r\n                        <li>{profile.contacts.instagram}</li>\r\n                        <li>{profile.contacts.youtube}</li>\r\n                        <li>{profile.contacts.github}</li>\r\n                    </ul>\r\n                </div>\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport \"./post.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post__item\">\r\n            <img className=\"post__item_img\" src=\"https://www.serietotaal.nl/images/nieuws/t/6fbi52rzy3ly-full.jpg\" alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message...\" validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);","import React, {memo} from \"react\";\r\nimport \"./posts.css\";\r\nimport Post from \"../Post/post.jsx\";\r\nimport AddPostForm from \"./Sections/AddNewPostForm\";\r\n\r\nconst Posts = memo(props => {\r\n    let postElements = [...props.postsData].reverse().map(post => <Post message={post.message} key={post.id} likes={post.likes} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addPosts(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <h3>my post</h3>\r\n            <AddPostForm onSubmit={addNewMessage}/>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n});\r\n\r\nexport default Posts;","import {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPosts: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from \"react\";\r\nimport \"./profile.css\"\r\nimport ProfileInfo from \"./Sections/ProfileInfo/ProfileInfo.jsx\";\r\nimport PostsContainer from \"./Sections/Posts/postsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from \"react\";\r\nimport \"./profile.css\"\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto} />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}